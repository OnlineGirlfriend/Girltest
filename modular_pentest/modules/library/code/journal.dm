// Journals //

/obj/item/folder/journal
	name = "journal"
	desc = "A personal journal."
	icon = 'modular_pentest/modules/library/icons/journal.dmi'
	icon_state = "journal_brown"
	var/was_torn = FALSE
	var/last_torn_entry_name = ""
	var/locked = FALSE
	var/was_tampered = FALSE
	var/owner_ckey = null

/obj/item/folder/journal/Initialize()
	. = ..()
	folder_insertables = typecacheof(list(
		/obj/item/paper,
		/obj/item/photo
	))
	update_icon()

/obj/item/folder/journal/examine()
	. = ..()
	if(locked)
		. += span_notice("[src] is locked.")

	if(was_tampered)
		. += span_warning("The clasp appears to have been pried open.")

	if(was_torn)
		if(last_torn_entry_name && last_torn_entry_name != "")
			. += span_notice("A page appears to have been torn out. The visible scrap reads: '[last_torn_entry_name]â€¦'")
		else
			. += span_notice("A page appears to have been torn out.")

/obj/item/folder/journal/rename(mob/user)
	if(!user.is_literate())
		to_chat(user, span_notice("You scribble illegibly on the cover."))
		return

	var/inputvalue = stripped_input(user, "What would you like to title this journal?", "Journal Title", "", MAX_NAME_LEN)

	if(!inputvalue)
		return

	if(user.canUseTopic(src, BE_CLOSE))
		name = "journal - '[inputvalue]'"

/obj/item/folder/journal/AltClick(mob/user)
	to_chat(user, span_warning("You can't remove pages from [src] that easily."))

/obj/item/folder/journal/verb/tear_page_out()
	set name = "Tear Out Page"
	set category = "Object"
	set src in usr

	if(!contents.len)
		to_chat(usr, span_warning("[src] has no pages to tear out."))
		return

	var/list/page_names = list()
	for(var/obj/item/I in contents)
		page_names += I.name

	var/choice = input(usr, "Which page do you want to tear out?", "Tear Out Page") in page_names
	if(!choice)
		return

	for(var/obj/item/I in contents)
		if(I.name == choice)
			contents.Remove(I)
			if(!usr.put_in_hands(I))
				I.forceMove(usr.loc)

			was_torn = TRUE
			last_torn_entry_name = ""

			if(istype(I, /obj/item/paper))
				var/obj/item/paper/P = I
				if(P.text && length(P.text))
					last_torn_entry_name = copytext(P.text, 1, 40)

			to_chat(usr, span_notice("You tear out a page from [src]."))
			return

/obj/item/folder/journal/verb/lock_journal()
	set name = "Lock Journal"
	set category = "Object"
	set src in usr

	if(locked)
		to_chat(usr, span_warning("[src] is already locked."))
		return

	locked = TRUE
	owner_ckey = usr.ckey // Locking the journal makes you the owner
	to_chat(usr, span_notice("You lock [src]."))

/obj/item/folder/journal/verb/unlock_journal()
	set name = "Unlock Journal"
	set category = "Object"
	set src in usr

	if(!locked)
		to_chat(usr, span_warning("[src] is already unlocked."))
		return

	if(usr.ckey != owner_ckey)
		to_chat(usr, span_danger("You can't unlock this... maybe there's another way."))
		return

	locked = FALSE
	to_chat(usr, span_notice("You unlock [src]."))

/obj/item/folder/journal/attackby(obj/item/weapon, mob/user, params)
	if(locked && istype(weapon, /obj/item/screwdriver))
		locked = FALSE
		was_tampered = TRUE // EVIDENCE OF TAMPERING
		owner_ckey = null // Please don't steal my diary
		to_chat(user, span_warning("You pry open the clasp on [src] with your screwdriver. How could you do this?"))
		return
	..()

// Varieties //

/obj/item/folder/journal/brown
	desc = "A brown leather journal."
	icon_state = "journal_brown"

/obj/item/folder/journal/green
	desc = "A green leather journal."
	icon_state = "journal_green"

/obj/item/folder/journal/blue
	desc = "A blue leather journal."
	icon_state = "journal_blue"

/obj/item/folder/journal/pink
	desc = "A pink leather journal."
	icon_state = "journal_pink"

/obj/item/folder/journal/black
	desc = "A black leather journal."
	icon_state = "journal_black"

/obj/item/folder/journal/plaid_orange
	desc = "An orange plaid journal."
	icon_state = "plaid_orange"

/obj/item/folder/journal/plaid_purple
	desc = "A purple plaid journal."
	icon_state = "plaid_purple"

/obj/item/folder/journal/plaid_red
	desc = "A red plaid journal."
	icon_state = "plaid_red"

/obj/item/folder/journal/plaid_grey
	desc = "A grey plaid journal."
	icon_state = "plaid_grey"

/obj/item/folder/journal/plaid_blue
	desc = "A blue plaid journal."
	icon_state = "plaid_blue"

// Loadout entries //

/datum/gear/journal/brown
	display_name = "brown leather journal"
	path = /obj/item/folder/journal/brown

/datum/gear/journal/green
	display_name = "green leather journal"
	path = /obj/item/folder/journal/green

/datum/gear/journal/blue
	display_name = "blue leather journal"
	path = /obj/item/folder/journal/blue

/datum/gear/journal/pink
	display_name = "pink leather journal"
	path = /obj/item/folder/journal/pink

/datum/gear/journal/black
	display_name = "black leather journal"
	path = /obj/item/folder/journal/black

/datum/gear/journal/plaid_orange
	display_name = "orange plaid journal"
	path = /obj/item/folder/journal/plaid_orange

/datum/gear/journal/plaid_purple
	display_name = "purple plaid journal"
	path = /obj/item/folder/journal/plaid_purple

/datum/gear/journal/plaid_red
	display_name = "red plaid journal"
	path = /obj/item/folder/journal/plaid_red

/datum/gear/journal/plaid_grey
	display_name = "grey plaid journal"
	path = /obj/item/folder/journal/plaid_grey

/datum/gear/journal/plaid_blue
	display_name = "blue plaid journal"
	path = /obj/item/folder/journal/plaid_blue
