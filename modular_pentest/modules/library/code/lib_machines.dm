// Book binder override //

/obj/machinery/bookbinder/
	var/obj/item/book/current_book = null
	var/list/cover_icon_states = list(
		"cover1",
		"cover2",
		"cover3",
		"cover4",
	)// change later

/obj/machinery/bookbinder/attackby(obj/item/I, mob/user)
	if(istype(I, /obj/item/book))
		if(current_book)
			to_chat(user, "There's already a book inside.")
			return
		var/obj/item/book/B = I
		user.drop_item()
		B.forceMove(src)
		current_book = B
		to_chat(user, "You insert [B.name] into the bookbinder.")
		src.reskin(user)
		return

	. = ..()

/obj/machinery/bookbinder/proc/reskin(mob/user) // Lets you select a cover
	if(!current_book || !user)
		return

	var/list/choices = list()
	for(var/state in cover_icon_states)
		choices[state] = state

	var/choice = input(user, "Choose a new cover for the book.", "Book Cover") as null|anything in choices
	if(!choice)
		to_chat(user, "You canceled the selection.")
		return

	current_book.icon = 'icons/obj/library.dmi'
	current_book.icon_state = choice
	to_chat(user, "You set the book's cover to '[choice]'.")

/obj/machinery/bookbinder/attack_hand(mob/user)
	if(current_book)
		to_chat(user, "You remove [current_book.name] from the bookbinder.")
		current_book.forceMove(get_turf(src))
		current_book = null
	else
		. = ..()
