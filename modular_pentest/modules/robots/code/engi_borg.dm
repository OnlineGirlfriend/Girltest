/*
		ENGINEERING MODULES
*/

/obj/item/robot_module/engineering
	name = "Engineering"
	basic_modules = list(
		/obj/item/assembly/flash/cyborg,
		/obj/item/borg/sight/meson,
		/obj/item/construction/rcd/borg,
		/obj/item/pipe_dispenser,
		/obj/item/extinguisher,
		/obj/item/weldingtool/largetank/cyborg,
		/obj/item/borg/cyborg_omnitool/engineering,
		/obj/item/borg/cyborg_omnitool/engineering,
		/obj/item/borg/cyborg_omnitool/engineering,
		/obj/item/t_scanner,
		/obj/item/analyzer,
		/obj/item/geiger_counter/cyborg,
		/obj/item/assembly/signaler/cyborg,
		/obj/item/areaeditor/shuttle/cyborg,
		/obj/item/electroadaptive_pseudocircuit,
		/obj/item/stack/sheet/metal/cyborg,
		/obj/item/stack/sheet/glass/cyborg,
		/obj/item/stack/sheet/rglass/cyborg,
		/obj/item/borg/apparatus/sheet_manipulator,
		/obj/item/stack/rods/cyborg,
		/obj/item/stack/tile/plasteel/cyborg,
		/obj/item/stack/cable_coil/cyborg)
	emag_modules = list(/obj/item/borg/stun)
	cyborg_base_icon = "engineer"
	moduleselect_icon = "engineer"
	magpulsing = TRUE
	hat_offset = -4

/obj/item/robot_module/engineering/be_transformed_to(obj/item/robot_module/old_module)
	var/mob/living/silicon/robot/R = loc
	var/static/list/engi_icons
	if(!engi_icons)
		engi_icons = list(
		"Antique" = image(icon = 'icons/mob/robots.dmi', icon_state = "engibot"),
		"Engiseer" = image(icon = 'icons/mob/robots.dmi', icon_state = "engiseer"),
		"Default" = image(icon = 'icons/mob/robots.dmi', icon_state = "engineer"),
		"Droid" = image(icon = 'icons/mob/robots.dmi', icon_state = "droid-engineer"),
		"Marina" = image(icon = 'icons/mob/robots.dmi', icon_state = "marinaEN"),
		"Sleek" = image(icon = 'icons/mob/robots.dmi', icon_state = "sleekengineer"),
		"Kodiak" = image(icon = 'icons/mob/robots.dmi', icon_state = "kodiak-eng"),
		"Noble" = image(icon = 'icons/mob/robots.dmi', icon_state = "Noble-ENG"),
		"R34 - ENG7a 'Conagher'" = image(icon = 'icons/mob/robots.dmi', icon_state = "conagher"),
		"Meka Engineer - F" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi', icon_state = "fmekaeng"),
		"Meka Engineer - M" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi', icon_state = "mmekaeng"),
		)
		engi_icons = sortList(engi_icons)
	var/engi_borg_icon = show_radial_menu(R, R , engi_icons, custom_check = CALLBACK(src, PROC_REF(check_menu), R), radius = 42, require_near = TRUE)
	switch(engi_borg_icon)
		if("Antique")
			cyborg_base_icon = "engibot"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "engibot"
		if("Engiseer")
			cyborg_base_icon = "engiseer"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key ="engiseer"
		if("Default")
			cyborg_base_icon = "engineer"
		if("Droid")
			cyborg_base_icon = "droid-engineer"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "droid-engineer"
		if("Marina")
			cyborg_base_icon = "marinaEN"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "marinaEN"
		if("Sleek")
			cyborg_base_icon = "sleekengineer"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "sleekengineer"
		if("Kodiak")
			cyborg_base_icon = "kodiak-eng"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "kodiak-eng"
		if("Noble")
			cyborg_base_icon = "Noble-ENG"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "Noble-ENG"
		if("R34 - ENG7a 'Conagher'")
			cyborg_base_icon = "conagher"
			cyborg_icon_override = 'icons/mob/robots.dmi'
			special_light_key = "conagher"
		if("Meka Engineer - F")
			cyborg_base_icon = "fmekaeng"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi'
			special_light_key = "fmekaeng"
		if("Meka Engineer - M")
			cyborg_base_icon = "mmekaeng"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi'
			special_light_key = "mmekaeng"
		else
			return FALSE
	return ..()

//
// RAPID PART EXCHANGE DEVICE - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/rped
	name = "engineering cyborg RPED"
	desc = "A rapid part exchange device for the engineering cyborg."
	icon_state = "module_engineer"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/engineering, /obj/item/robot_module/saboteur, /obj/item/robot_module/pandora)

	items_to_add = list(/obj/item/storage/part_replacer/cyborg)

//
// CIRCUIT MANIPULATION APPARATUS - BOARD AND UPGRADE CODE
//

/obj/item/borg/upgrade/circuit_app
	name = "circuit manipulation apparatus"
	desc = "An engineering cyborg upgrade allowing for manipulation of circuit boards."
	icon_state = "module_engineer"
	require_model = TRUE
	model_type = list(/obj/item/robot_module/engineering, /obj/item/robot_module/saboteur)

	items_to_add = list(/obj/item/borg/apparatus/circuit)

//
// ENGINEERING APPARATUS - BOARD AND UPGRADE CODE
//

//
// ENGINEERING APPARATUS - CODE
//

/obj/item/borg/apparatus/sheet_manipulator
	name = "material manipulation apparatus"
	desc = "An apparatus for carrying, deploying, and manipulating sheets of material. The device can also carry custom floor tiles."
	icon = 'modular_pentest/modules/robots/icons/obj/borg_tools.dmi'
	icon_state = "borg_stack_apparatus"
	storable = list(/obj/item/stack/sheet,
					/obj/item/stack/tile)

/obj/item/borg/apparatus/sheet_manipulator/Initialize(mapload)
	update_appearance()
	return ..()

/obj/item/borg/apparatus/sheet_manipulator/update_overlays()
	. = ..()
	var/mutable_appearance/arm = mutable_appearance(icon, "borg_stack_apparatus_arm1")
	if(stored)
		stored.pixel_x = 0
		stored.pixel_y = 0
		arm.icon_state = "borg_stack_apparatus_arm2"
		var/mutable_appearance/stored_copy = new /mutable_appearance(stored)
		var/underscore = findtext(stored_copy.icon_state, "_")
		if(underscore)
			stored_copy.icon_state = initial(stored.icon_state) //how we use the icon_state of single sheets, even with full stacks
		stored_copy.layer = FLOAT_LAYER
		stored_copy.plane = FLOAT_PLANE
		. += stored_copy
	. += arm

/obj/item/borg/apparatus/sheet_manipulator/examine()
	. = ..()
	if(stored)
		. += "The apparatus currently has [stored] secured."
	. += span_notice(" <i>Right click/i>  has an option to drop the stored sheets. ")
