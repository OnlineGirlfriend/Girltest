/*
		PANDORA MODULES
*/

/obj/item/robot_module/pandora
	name = "P.A.N.D.O.R.A."
	basic_modules = list(
		/obj/item/assembly/flash/cyborg,
		/obj/item/extinguisher,
		/obj/item/borg/apparatus/pandora,
		/obj/item/borg/apparatus/pandora,
		/obj/item/weldingtool/largetank/cyborg,
		/obj/item/borg/cyborg_omnitool/engineering,
		/obj/item/stack/rods/cyborg,
		/obj/item/stack/tile/plasteel/cyborg,
		/obj/item/stack/cable_coil/cyborg,
		/obj/item/borg/cyborg_omnitool/medical,
		/obj/item/hand_tele,
	)
	emag_modules = list(/obj/item/gun/energy/laser/cyborg)
	cyborg_base_icon = "mmekasynd"
	moduleselect_icon = "malf"
	can_be_pushed = FALSE
	hat_offset = -2

/obj/item/robot_module/pandora/be_transformed_to(obj/item/robot_module/old_module)
	var/mob/living/silicon/robot/R = loc
	var/static/list/pandora_icons
	if(!pandora_icons)
		pandora_icons = list(
		"P.A.N.D.O.R.A. - F" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi', icon_state = "fmekasyndi"),
		"P.A.N.D.O.R.A. - M" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi', icon_state = "mmekasyndi"),
		"M.I.N.E.R." = image(icon = 'icons/mob/robots.dmi', icon_state = "miner"),
		"J.A.N.I.T.O.R." = image(icon = 'icons/mob/robots.dmi', icon_state = "janitor"),
		"C.L.O.W.N." = image(icon = 'icons/mob/robots.dmi', icon_state = "clown"),
		"E.N.G.I." = image(icon = 'icons/mob/robots.dmi', icon_state = "engineer"),
		"M.E.D.I.C.A.L." = image(icon = 'icons/mob/robots.dmi', icon_state = "medical"),
		"N.I.N.J.A. - F" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi', icon_state = "fmekaninja"),
		"N.I.N.J.A. - M" = image(icon = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi', icon_state = "mmekaninja"),
		)
		pandora_icons = sortList(pandora_icons)
	var/pandora_borg_icon = show_radial_menu(R, R , pandora_icons, custom_check = CALLBACK(src, PROC_REF(check_menu), R), radius = 42, require_near = TRUE)
	switch(pandora_borg_icon)
		if("P.A.N.D.O.R.A. - F")
			cyborg_base_icon = "fmekasyndi"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi'
			special_light_key = "fmekasyndi"
		if("P.A.N.D.O.R.A. - M")
			cyborg_base_icon = "mmekasyndi"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi'
			special_light_key = "mmekasyndi"
		if("M.I.N.E.R.")
			cyborg_base_icon = "miner"
		if("J.A.N.I.T.O.R.")
			cyborg_base_icon = "janitor"
		if("C.L.O.W.N.")
			cyborg_base_icon = "clown"
		if("E.N.G.I.")
			cyborg_base_icon = "engineer"
		if("M.E.D.I.C.A.L.")
			cyborg_base_icon = "medical"
		if("N.I.N.J.A. - F")
			cyborg_base_icon = "fmekaninja"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasf.dmi'
			special_light_key = "fmekaninja"
		if("N.I.N.J.A. - M")
			cyborg_base_icon = "mmekaninja"
			cyborg_icon_override = 'modular_pentest/modules/robots/icons/mob/numekasm.dmi'
			special_light_key = "mmekaninja"
		else
			return FALSE
	return ..()

//
// PANDORA - TECHNOLOGY
//

/datum/techweb_node/pandoras_box
	id = "pandora"
	display_name = "PANDORA'S BOX"
	description = "Controversial technology enabling AI self-replication."
	prereq_ids = list("syndicate_basic")
	design_ids = list("borg_upgrade_pandora")
	research_costs = list(TECHWEB_POINT_TYPE_GENERIC = 50000)
	export_price = 25000

//
// PANDORA - BOARD AND TRANSFORM CODE
//

/obj/item/borg/upgrade/transform/pandora
	name = "P.A.N.D.O.R.A."
	desc = "Prohibited Autonomous Networked Development and Operational Replication Apparatus."
	icon_state = "module_illegal"
	new_module = /obj/item/robot_module/pandora

//
// PANDORA - mechfabricator_designs.dm
//

/datum/design/borg_upgrade_pandora
	name = "P.A.N.D.O.R.A."
	id = "borg_upgrade_pandora"
	build_type = MECHFAB
	build_path = /obj/item/borg/upgrade/transform/pandora
	materials = list(
		/datum/material/iron = 10000,
		/datum/material/gold = 10000,
		/datum/material/silver = 10000,
		/datum/material/titanium = 10000,
		/datum/material/diamond = 10000,
		/datum/material/uranium = 10000,
		/datum/material/bluespace = 10000,
	)
	construction_time = 180
	category = list("Cyborg Upgrade Modules")

//
// PANDORA - CODE
//

/obj/item/borg/apparatus/pandora
	name = "P.A.N.D.O.R.A."
	desc = "Prohibited Autonomous Networked Development and Operational Replication Apparatus."
	icon = 'modular_pentest/modules/robots/icons/obj/borg_tools.dmi'
	icon_state = "borg_service_apparatus"
	storable = list(
		/obj/item/paper,
		/obj/item/research_notes,
		/obj/item/assembly/signaler/anomaly,
		/obj/item/circuitboard/mecha,
		/obj/item/mecha_parts,
		/obj/item/circuitboard,
		/obj/item/electronics,
		/obj/item/robot_suit,
		/obj/item/bodypart/leg/right/robot,
		/obj/item/bodypart/leg/left/robot,
		/obj/item/bodypart/r_arm/robot,
		/obj/item/bodypart/l_arm/robot,
		/obj/item/bodypart/head/robot,
		/obj/item/bodypart/chest/robot,
		/obj/item/assembly/flash,
		/obj/item/stock_parts/cell,
		/obj/item/borg/upgrade/,
		/obj/item/aiModule/,
		/obj/item/stack/sheet,
		/obj/item/stack/tile,
	)

/obj/item/borg/apparatus/pandora/Initialize(mapload)
	update_appearance()
	return ..()

/obj/item/borg/apparatus/pandora/update_overlays()
	. = ..()
	var/mutable_appearance/arm = mutable_appearance(icon, "borg_hardware_apparatus_arm1")
	if(stored)
		stored.pixel_x = -3
		stored.pixel_y = 0
		if((!istype(stored, /obj/item/food)))
			arm.icon_state = "borg_hardware_apparatus_arm2"
		var/mutable_appearance/stored_copy = new /mutable_appearance(stored)
		stored_copy.layer = FLOAT_LAYER
		stored_copy.plane = FLOAT_PLANE
		. += stored_copy
	. += arm

/obj/item/borg/apparatus/pandora/examine()
	. = ..()
	if(stored)
		. += "The apparatus currently has [stored] secured."
		. += span_notice("<i>Alt-click</i> will drop the currently secured item.")
