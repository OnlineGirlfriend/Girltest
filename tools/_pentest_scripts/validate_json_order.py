import json
import os
import sys

# Define the correct order of keys
CORRECT_ORDER = [
    "$schema", "map_name", "map_short_name", "map_path", "faction", "prefix",
    "manufacturer", "description", "tags", "namelists", "job_slots", "limit",
    "starting_funds", "enabled", "space_spawn", "token_icon_state", "architect",
    "contributors"
]

def validate_json_order(filepath):
    with open(filepath, 'r') as file:
        data = json.load(file)

    keys = list(data.keys())
    if "token_icon_state" not in data:
        print(f"Note: {filepath} is missing 'token_icon_state'. Using default sprite.")
        # Add a placeholder for validation purposes
        keys.insert(CORRECT_ORDER.index("token_icon_state"), "token_icon_state")

    if keys != CORRECT_ORDER:
        print(f"Error: {filepath} keys are out of order.")
        print(f"Expected order: {CORRECT_ORDER}")
        print(f"Actual order:   {keys}")
        return False
    return True

def main():
    base_path = os.path.join(os.getcwd(), "_maps", "configs")
    all_files_valid = True

    for root, _, files in os.walk(base_path):
        for file in files:
            if file.endswith(".json"):
                filepath = os.path.join(root, file)
                if not validate_json_order(filepath):
                    all_files_valid = False

    if not all_files_valid:
        sys.exit(1)

if __name__ == "__main__":
    main()
